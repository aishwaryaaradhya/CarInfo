Account Service:

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

interface Account {
  accountNo: number;
}

interface Transaction {
  transactionId: number;
  transactionType: string;
  amount: number;
  transactionDate: Date;
}

@Injectable({
  providedIn: 'root'
})
export class AccountService {
  private apiUrl = 'https://localhost:5001/api/accounts';

  constructor(private http: HttpClient) {}

  getAccountsByCustomerId(customerId: number): Observable<Account[]> {
    return this.http.get<Account[]>(`${this.apiUrl}/${customerId}/accounts`);
  }

  getTransactionsByAccountNo(accountNo: number): Observable<Transaction[]> {
    return this.http.get<Transaction[]>(`${this.apiUrl}/${accountNo}/transactions`);
  }
}

account Component

import { Component, OnInit } from '@angular/core';
import { AccountService } from './account.service';

@Component({
  selector: 'app-account',
  templateUrl: './account.component.html',
  styleUrls: ['./account.component.css']
})
export class AccountComponent implements OnInit {
  customerId: number | null = null;
  accounts: Account[] = [];
  selectedAccountNo: number | null = null;
  transactions: Transaction[] = [];

  constructor(private accountService: AccountService) {}

  ngOnInit(): void {}

  fetchAccounts(): void {
    if (this.customerId) {
      this.accountService.getAccountsByCustomerId(this.customerId).subscribe(accounts => {
        this.accounts = accounts;
      });
    }
  }

  fetchTransactions(): void {
    if (this.selectedAccountNo) {
      this.accountService.getTransactionsByAccountNo(this.selectedAccountNo).subscribe(transactions => {
        this.transactions = transactions;
      });
    }
  }
}

HTML

<div>
  <label for="customerId">Customer ID:</label>
  <input type="number" id="customerId" [(ngModel)]="customerId">
  <button (click)="fetchAccounts()">Get Accounts</button>
</div>

<div *ngIf="accounts.length > 0">
  <label for="accountNo">Account Number:</label>
  <select id="accountNo" [(ngModel)]="selectedAccountNo">
    <option *ngFor="let account of accounts" [value]="account.accountNo">
      {{ account.accountNo }}
    </option>
  </select>
  <button (click)="fetchTransactions()">Show Transactions</button>
</div>

<div *ngIf="transactions.length > 0">
  <h3>Transactions:</h3>
  <table>
    <thead>
      <tr>
        <th>Transaction ID</th>
        <th>Transaction Type</th>
        <th>Amount</th>
        <th>Date</th>
      </tr>
    </thead>
    <tbody>
      <tr *ngFor="let transaction of transactions">
        <td>{{ transaction.transactionId }}</td>
        <td>{{ transaction.transactionType }}</td>
        <td>{{ transaction.amount }}</td>
        <td>{{ transaction.transactionDate | date }}</td>
      </tr>
    </tbody>
  </table>
</div>


app module 

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';

import { AppComponent } from './app.component';
import { AccountComponent } from './account/account.component';
import { AccountService } from './account/account.service';

@NgModule({
  declarations: [
    AppComponent,
    AccountComponent
  ],
  imports: [
    BrowserModule,
    FormsModule,
    HttpClientModule
  ],
  providers: [AccountService],
  bootstrap: [AppComponent]
})
export class AppModule { }


