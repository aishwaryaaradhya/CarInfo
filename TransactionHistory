This is my Transaction Entity
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Online_Banking_Portal.Entities
{
    public class Transaction
    {
        public int TransactionId { get; set; }

        public long AccountNo { get; set; }

        public string TransactionType { get; set; } = null!;

        public decimal Amount { get; set; }

        public DateTime TransactionDate { get; set; }

        public virtual Account AccountNoNavigation { get; set; } = null!;
    }
}

This is my Account entity
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Transactions;

namespace Online_Banking_Portal.Entities
{
    public class Account
    {
        public long AccountNo { get; set; }

        public int? CustomerId { get; set; }

        public int? AccountTypeId { get; set; }

        public decimal Balance { get; set; }

        public DateOnly? DateOfOpening { get; set; }

        public virtual AccountType? AccountType { get; set; }

        public virtual Customer? Customer { get; set; }

        public virtual ICollection<DebitCardApplication> DebitCardApplications { get; set; } = new List<DebitCardApplication>();

        public virtual ICollection<DebitCardDetail> DebitCardDetails { get; set; } = new List<DebitCardDetail>();

        public virtual ICollection<Transaction> Transactions { get; set; } = new List<Transaction>();
    }
}
======================================================================================================================================================

This is my TransferFunds DAL (Data Access Layer) 
public IEnumerable<AccountTransactionsViewModel> GetAccountTransactionByCustomerIdDAL(int customerId)
 {
     
     try
     {
         var transaction = (from accounts in _context.Accounts
                                //where i.CustomerId == customerId
                            join transactions in _context.Transactions on accounts.AccountNo equals transactions.AccountNo
                            where accounts.CustomerId == customerId && accounts.AccountNo == accounts.AccountNo

                            select new AccountTransactionsViewModel
                            {
                                AccountNo = accounts.AccountNo,
                                TransactionId = transactions.TransactionId,
                                TransactionType = transactions.TransactionType,
                                Amount = transactions.Amount,
                                TransactionDate = transactions.TransactionDate,
                            }).ToList();

         return transaction.ToList();
     }
     catch (Exception ex)
     {
         throw new OnlineBankExceptions(ex.Message);
     }
 }

This is my Transfer Funds Business Layer (BL)
public  IEnumerable<AccountTransactionsViewModel> GetAccountTransactionByCustomerIdBL(int customerId)
{
    TransferFundsDAL tf=new TransferFundsDAL();
    return tf.GetAccountTransactionByCustomerIdDAL(customerId);
}

This is my Transfer Funds Asp.Net Core Web API controller 
[HttpGet("TransactionHistory")]
public async Task<IEnumerable<AccountTransactionsViewModel>> GetAccountTransactionByCustomerId(int cutomerID)
{
    TransferFundsBL objBL = new TransferFundsBL();
    var transaction = objBL.GetAccountTransactionByCustomerIdBL(cutomerID);

    //if (!ModelState.IsValid)
    //{
    //    return BadRequest(ModelState);
    //}
    //HttpStatusCode objCode;

    return transaction.ToList();
}

I want to create Angular module, component, Services and Html for the same.I want the view to have textbox , 
to take customerId from user as input. Once the customerID is given,account no associated with thats cutomerid to be fetched 
And the account number should be displayed in dropdown.Once the user selects the Account number and clicks on show transaction button, It should list 
all transaction associated with that account number.


I want to create a asp.net core web api controller.with respect to customer Id, all the accountNo associated with that customer id should be selected.
Based on the account number selected the transaction associated with thaat account number to be listed from the transaction table.
